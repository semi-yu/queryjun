services:
  # Web application server
  queryjun:
    container_name: queryjun-deploy
    build:
      context: .
      dockerfile: ./Dockerfile.queryjun
    expose:
      - "8000"
    volumes:
      - ./docker-storage/log:/var/log
    networks:
      - deploy-network
    depends_on:
      - postgres_serve
      - postgres_solve
      - rabbitmq
    env_file:
      - ./env/.env.django
      - ./env/.env.postgres-solve
      - ./env/.env.postgres-serve
      - ./env/.env.rabbitmq

  # Web server
  nginx:
    container_name: nginx-deploy
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy-settings/nginx/certificate.sh:/etc/certificate.sh
      - ./deploy-settings/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker-storage/nginx/access.log:/var/log/nginx/access.log
      - ./docker-storage/nginx/error.log:/var/log/nginx/error.log
    networks:
      - deploy-network
    depends_on:
      - queryjun

  # Postgres container for storing service data
  postgres_serve:
    image: postgres:latest
    container_name: postgres-serve
    expose:
      - "5432"
    env_file:
      - ./env/.env.postgres-serve
    environment:
      POSTGRES_DB: ${POSTGRES_SERVE_DB}
      POSTGRES_USERNAME: ${POSTGRES_SERVE_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_SERVE_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_SERVE_PORT}
      POSTGRES_HOST: ${POSTGRES_SERVE_HOST}
    shm_size: 128mb
    volumes:
      - ./deploy-settings/postgres-serve/template:/docker-entrypoint-initdb.d/template
      - ./deploy-settings/postgres-serve/entrypoint.sh:/docker-entrypoint-inidb.d/entrypoint.sh
      - ./docker-storage/postgres-serve:/var/lib/postgresql/data
    networks:
      - deploy-network
    entrypoint: ["/bin/bash", "/docker-entrypoint-inidb.d/entrypoint.sh"]

  # Postgres container for executing queries
  postgres_solve:
    image: postgres:latest
    container_name: postgres-solve
    expose:
      - "5432"
    env_file:
      - ./env/.env.postgres-solve
    environment:
      POSTGRES_DB: ${POSTGRES_SOLVE_DB}
      POSTGRES_USERNAME: ${POSTGRES_SOLVE_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_SOLVE_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_SOLVE_PORT}
      POSTGRES_HOST: ${POSTGRES_SOLVE_HOST}
    shm_size: 128mb
    volumes:
      - ./deploy-settings/postgres-solve/template:/docker-entrypoint-initdb.d/template
      - ./deploy-settings/postgres-solve/entrypoint.sh:/docker-entrypoint-intdb.d/entrypoint.sh
      - ./docker-storage/postgres-solve:/var/lib/postgresql/data
    networks:
      - deploy-network
    entrypoint: ["/bin/bash", "/docker-entrypoint-intdb.d/entrypoint.sh"]

  # rabbitmq
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq-deploy
    expose:
      - "5672"
    env_file:
      - ./env/.env.rabbitmq
    volumes:
      - ./deploy-settings/rabbitmq/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ./deploy-settings/rabbitmq/definitions.template.json:/etc/rabbitmq/definitions.template.json
      - ./docker-storage/rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./docker-storage/rabbitmq/data:/var/lib/rabbitmq
      - ./docker-storage/rabbitmq/logs:/var/log/rabbitmq
    networks:
      - deploy-network
    entrypoint: ["/bin/bash", "/usr/local/bin/entrypoint.sh"]

networks:
  deploy-network:
    driver: bridge